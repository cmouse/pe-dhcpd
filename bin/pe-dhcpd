#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'daemons'
require 'pe-dhcpd'

config_file = ENV['PE_DHCPD_CONFIG_FILE'] || "/etc/pe-dhcpd.conf"

if File.readable? config_file
  eval File.read(config_file)
else
  ip = nil
  DNS_SERVERS = %w{ 127.0.0.1 }
  NTP_SERVERS = %w{ 127.0.0.1 }
  LEASE_TIME = 86400
  REBIND_TIME = 37800
  RENEWAL_TIME = 28800
  YIADDR_POLICY_30_OR_31_MASK = false
  YIADDR_POLICY = 1
  SUBNET_MASK = '255.255.255.254'
  BLACKLIST_MACS = []
  HOOKS = {
   :discover => [],
   :offer => [],
   :request => [],
   :acknowledge => []
  }
  MAIN_LOOP_HOOK = nil
end

# chkconfig for RedHat Linux...
#
# chkconfig: 345 99 00
# description: Controls the PE-DHCP daemon
# processname: pe-dhcpd

# chkconfig/insserv for SUSE Linux...
### BEGIN INIT INFO
# Provides: pe-dhcpd
# Required-Start: $all
# Should-Start:
# X-UnitedLinux-Should-Start:
# Required-Stop:
# Default-Start: 3 5
# Default-Stop:
# Short-Description: pe-dhcpd
# Description: Controls the PE-DHCP daemon
### END INIT INFO

Daemons.run_proc('pe-dhcpd', { :dir_mode => :system }) do
  log = Log4r::Logger.new 'dhcpd'

  begin
    log.outputters = Log4r::SyslogOutputter.new('dhcpd', :logopt => 0x1, :facility => 'LOG_DAEMON')
    log.outputters[0].formatter = Log4r::PatternFormatter.new(:pattern => "%M")
    log.level = Log4r::INFO

    if Daemons.controller.options[:ontop]
      log.outputters[1] = Log4r::Outputter.stderr
      log.outputters[1].formatter = Log4r::PatternFormatter.new(:pattern => "%d [%l]: %m")
    end

    app = PeDHCPd::DhcpServer.new(ip)
    PeDHCPd::Vars.log = log
    app.run
  rescue Interrupt, SystemExit => e
    log.warn "Shutdown complete"
    # do nothing
  end
end
